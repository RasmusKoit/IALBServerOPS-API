{
  "openapi": "3.0.1",
  "info": {
    "title": "IALB Server Ops",
    "description": "A RESTful API for managing servers and users",
    "contact": {
      "name": "GitHub",
      "url": "https://github.com/RasmusKoit"
    },
    "version": "0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Server Controller API",
      "description": "Provides RESTful API endpoints for managing servers"
    },
    {
      "name": "Permissions Controller API",
      "description": "This class is used to manage permissions."
    },
    {
      "name": "User Controller API",
      "description": "Provides RESTful API endpoints for managing users"
    }
  ],
  "paths": {
    "/user/update": {
      "post": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the updated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "login",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the logged in user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "string"
                },
                "example": "Invalid credentials"
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "string"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/user/add": {
      "post": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "addUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the newly created user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": "Invalid request body"
              }
            }
          }
        }
      }
    },
    "/server/update": {
      "post": {
        "tags": [
          "Server Controller API"
        ],
        "operationId": "updateServer",
        "parameters": [
          {
            "name": "server",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Server"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the updated server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "Server or User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "examples": {
                  "Server error": {
                    "description": "Server error",
                    "value": "Server not found"
                  },
                  "User error": {
                    "description": "User error",
                    "value": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/server/add": {
      "post": {
        "tags": [
          "Server Controller API"
        ],
        "operationId": "addServer",
        "parameters": [
          {
            "name": "serverName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ram",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "diskSpace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "cpuCores",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ipPubAddress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ipPrivAddress",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the newly created server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "400": {
            "description": "Invalid server parameters",
            "content": {
              "application/json": {
                "example": "Invalid server parameters"
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/permissions/update": {
      "post": {
        "tags": [
          "Permissions Controller API"
        ],
        "operationId": "updatePermission",
        "parameters": [
          {
            "name": "permission",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the updated permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "No permission with the given ID exists or no user with the given ID exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/add": {
      "post": {
        "tags": [
          "Permissions Controller API"
        ],
        "operationId": "createPermission",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleNames",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CONSOLE_ROLE",
                  "USER_ROLE",
                  "FILE_ROLE",
                  "BACKUP_ROLE",
                  "ALLOCATION_ROLE",
                  "STARTUP_ROLE",
                  "DATABASE_ROLE",
                  "SCHEDULE_ROLE",
                  "SETTINGS_ROLE"
                ]
              }
            }
          },
          {
            "name": "permissionNames",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CONTROL_CONSOLE",
                  "CONTROL_START",
                  "CONTROL_STOP",
                  "CONTROL_RESTART",
                  "USER_CREATE",
                  "USER_READ",
                  "USER_UPDATE",
                  "USER_DELETE",
                  "FILE_CREATE",
                  "FILE_READ",
                  "FILE_UPDATE",
                  "FILE_DELETE",
                  "FILE_ARCHIVE",
                  "FILE_SFTP",
                  "BACKUP_CREATE",
                  "BACKUP_READ",
                  "BACKUP_UPDATE",
                  "BACKUP_DELETE",
                  "BACKUP_DOWNLOAD",
                  "ALLOCATION_READ",
                  "ALLOCATION_CREATE",
                  "ALLOCATION_UPDATE",
                  "ALLOCATION_DELETE",
                  "STARTUP_READ",
                  "STARTUP_UPDATE",
                  "DATABASE_CREATE",
                  "DATABASE_READ",
                  "DATABASE_UPDATE",
                  "DATABASE_DELETE",
                  "DATABASE_VIEW_PASSWORD",
                  "SCHEDULE_CREATE",
                  "SCHEDULE_READ",
                  "SCHEDULE_UPDATE",
                  "SCHEDULE_DELETE",
                  "SETTINGS_RENAME",
                  "SETTINGS_REINSTALL"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the new permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "No user with the given ID exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "No user with the given ID exists"
              }
            }
          }
        }
      }
    },
    "/user/username/{username}": {
      "get": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with the given username",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "string"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/user/userid/{userId}": {
      "get": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/user/email/{email}": {
      "get": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "getUserByEmail",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user with the given email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "string"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "A map of all users or null if no users exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/server/{serverId}": {
      "get": {
        "tags": [
          "Server Controller API"
        ],
        "operationId": "getServer",
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The server with the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            }
          },
          "404": {
            "description": "Server not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": "Server not found"
              }
            }
          }
        }
      }
    },
    "/server/": {
      "get": {
        "tags": [
          "Server Controller API"
        ],
        "operationId": "getAllServers",
        "responses": {
          "200": {
            "description": "A map of all servers or null if no servers exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Server"
                }
              }
            }
          }
        }
      }
    },
    "/permissions/userid/{userId}": {
      "get": {
        "tags": [
          "Permissions Controller API"
        ],
        "operationId": "getPermissionByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The permission with the given user ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "404": {
            "description": "No permission with the given user ID exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "No permission with the given user ID exists"
              }
            }
          }
        }
      }
    },
    "/permissions/permissionid/{permissionId}": {
      "get": {
        "tags": [
          "Permissions Controller API"
        ],
        "operationId": "getPermission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The permission with the given ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          },
          "404": {
            "description": "No permission with the given ID exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "No permission with the given ID exists"
              }
            }
          }
        }
      }
    },
    "/permissions/": {
      "get": {
        "tags": [
          "Permissions Controller API"
        ],
        "operationId": "getAllPermissions",
        "responses": {
          "200": {
            "description": "A map of all permissions or null if no permissions exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Permission"
                }
              }
            }
          }
        }
      }
    },
    "/user/delete/{userId}": {
      "delete": {
        "tags": [
          "User Controller API"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the deleted user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "example": "User not found"
              }
            }
          }
        }
      }
    },
    "/server/delete/{serverId}": {
      "delete": {
        "tags": [
          "Server Controller API"
        ],
        "operationId": "deleteServer",
        "parameters": [
          {
            "name": "serverId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the deleted server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "Server or User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                },
                "examples": {
                  "Server error": {
                    "description": "Server error",
                    "value": "Server not found"
                  },
                  "User error": {
                    "description": "User error",
                    "value": "User not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/permissions/delete/{permissionId}": {
      "delete": {
        "tags": [
          "Permissions Controller API"
        ],
        "operationId": "deletePermission",
        "parameters": [
          {
            "name": "permissionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The ID of the deleted permission",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          },
          "404": {
            "description": "No permission with the given ID exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                },
                "example": "No permission with the given ID exists"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "passwordHash": {
            "type": "string"
          },
          "serverIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Server": {
        "type": "object",
        "properties": {
          "serverId": {
            "type": "string",
            "format": "uuid"
          },
          "serverName": {
            "type": "string"
          },
          "ram": {
            "type": "integer",
            "format": "int32"
          },
          "diskSpace": {
            "type": "integer",
            "format": "int32"
          },
          "cpuCores": {
            "type": "integer",
            "format": "int32"
          },
          "ipPubAddress": {
            "type": "string",
            "format": "ipv4"
          },
          "ipPrivAddress": {
            "type": "string",
            "format": "ipv4"
          },
          "ownerId": {
            "type": "string",
            "format": "uuid"
          },
          "serverStatus": {
            "type": "string",
            "enum": [
              "STOPPED",
              "STARTING",
              "RUNNING",
              "STOPPING",
              "RESTARTING",
              "CRASHED",
              "UNKNOWN"
            ]
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "permissionId": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "roleNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CONSOLE_ROLE",
                "USER_ROLE",
                "FILE_ROLE",
                "BACKUP_ROLE",
                "ALLOCATION_ROLE",
                "STARTUP_ROLE",
                "DATABASE_ROLE",
                "SCHEDULE_ROLE",
                "SETTINGS_ROLE"
              ]
            }
          },
          "permissionNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CONTROL_CONSOLE",
                "CONTROL_START",
                "CONTROL_STOP",
                "CONTROL_RESTART",
                "USER_CREATE",
                "USER_READ",
                "USER_UPDATE",
                "USER_DELETE",
                "FILE_CREATE",
                "FILE_READ",
                "FILE_UPDATE",
                "FILE_DELETE",
                "FILE_ARCHIVE",
                "FILE_SFTP",
                "BACKUP_CREATE",
                "BACKUP_READ",
                "BACKUP_UPDATE",
                "BACKUP_DELETE",
                "BACKUP_DOWNLOAD",
                "ALLOCATION_READ",
                "ALLOCATION_CREATE",
                "ALLOCATION_UPDATE",
                "ALLOCATION_DELETE",
                "STARTUP_READ",
                "STARTUP_UPDATE",
                "DATABASE_CREATE",
                "DATABASE_READ",
                "DATABASE_UPDATE",
                "DATABASE_DELETE",
                "DATABASE_VIEW_PASSWORD",
                "SCHEDULE_CREATE",
                "SCHEDULE_READ",
                "SCHEDULE_UPDATE",
                "SCHEDULE_DELETE",
                "SETTINGS_RENAME",
                "SETTINGS_REINSTALL"
              ]
            }
          }
        }
      }
    }
  }
}